name: Cloud e2e Test

on:
  workflow_dispatch:
    inputs:
      CLOUD_ENV:
        description: "The cloud env of test"
        default: 'demo'
        type: choice
        required: true
        options:
          - demo
          - dev
      ENV_NAME:
        description: "managed env name of test"
        type: string
        required: true
        default: 'demotest'
      ENV_TYPE:
        description: 'env type'
        required: false
        default: 'playground'
        type: choice
        options:
          - playground
          - managed
      ENV_INIT:
        description: 'choose test env init'
        type: boolean
        required: true
        default: true
      ENV_CLEAN:
        description: 'choose test env clean'
        type: boolean
        required: true
        default: true
      ENGINE_TYPE:
        description: 'engine type'
        required: true
        default: ''
        type: choice
        options:
          - wesql
          - mysql-57
          - mysql-80
          - redis
          - postgres
          - starrocks
          - mongodb
          - kafka
          - oceanbase
          - mogdb
      ENGINE_MODE:
        description: 'engine mode'
        type: string
        required: false
        default: ''
      e2etest-branch:
        description: 'e2etest branch name(default:main)'
        type: string
        required: false
        default: 'support/test-action'


env:
  ACK_KUBECONFIG_DEMO: ${{ secrets.ACK_KUBECONFIG_DEMO }}
  AUTH0_ID_TOKEN: ${{ secrets.AUTH0_ID_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  CLOUD_DEV_API: ${{ secrets.CLOUD_DEV_API }}
  ORG_NAME: 'zhouquanyu2001'
  HELM_VERSION: v3.14.4
  GO_VERSION: 1.21
  KUBECTL_VERSION: v1.28.3
  GINKGO_VERSION: v2.13.0


permissions:
  id-token: write
  contents: read


jobs:
  cloud-e2e-test:
    name: run ${{ inputs.ENGINE_TYPE }}
    runs-on: ubuntu-latest

    steps:
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Checkout e2e Code
        uses: actions/checkout@v4
        with:
          repository: apecloud/e2etest
          ref: ${{ inputs.e2etest-branch }}
          token: ${{ env.GITHUB_TOKEN }}

      - uses: azure/setup-kubectl@v3
        with:
          version: "${{ env.KUBECTL_VERSION }}"

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.HELM_VERSION }}


      - name: install ginkgo
        run: |
          go install github.com/onsi/ginkgo/v2/ginkgo@${{ env.GINKGO_VERSION }}

      

      - name: Configure ACK Context ${{ inputs.CLOUD_ENV_NAME }}
        run: |
          mkdir -p $HOME/.kube
          touch $HOME/.kube/config
          echo '${{ env.ACK_KUBECONFIG_DEMO }}' > $HOME/.kube/config
          echo 'TEST_URL=${{ env.CLOUD_DEMO_API }}' >> $GITHUB_ENV
  

      - name: run cloud e2e test
        id: run_cloud_e2e_test
        run: |
          make -e \
              TEST_TYPE=${{ inputs.ENGINE_TYPE }} \
              URL=${{ input.CLOUD_DEMO_API }} \
              ENV_TYPE=${{ inputs.ENV_TYPE }} \
              ORG_NAME=${{ env.ORG_NAME }} \
              ENV_NAME=${{ inputs.ENV_NAME }} \
              ENV_INIT=${{ inputs.ENV_INIT }} \
              ENV_CLEAN=${{ inputs.ENV_CLEAN }} \
              KUBECONFIG=${{ env.KUBECONFIG }} \
              test-e2e-apecloud
          echo E2E_TEST_RESULT=1 >> $GITHUB_ENV

